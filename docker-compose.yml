version: '3'
services:

  #'WebService' Service
  app:
    build:
      context: .
      dockerfile: docker/web/Dockerfile
    image: 7.2-fpm 
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./webservice:/var/www
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./webservice:/var/www/
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - app-network

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=homestead
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_USER=homestead
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_HOST=%
      - SERVICE_TAGS=dev
      - SERVICE_NAME=mysql
    volumes:
      - dbdata:/var/lib/mysql/
      #- ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network
  # phpmyadmin
  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: secret 
    networks:
      - app-network

  #'Website' Service
  app2:
    build:
      context: .
      dockerfile: docker/web2/Dockerfile
    environment:
    - MYSQL_DATABASE=dbname
    - MYSQL_USER=dbuser
    - MYSQL_PASSWORD=654321
    - MYSQL_HOST=db
    ports:
    - "8090:80"
    volumes:
    - ./website:/var/www
    depends_on:
      - db
    networks:
      - app-network
#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local